{"ast":null,"code":"import { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, SET_UNAUTHENTICATED } from '../types';\nimport axios from 'axios';\nexport const loginUser = (userData, history, tokenId) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/signup', userData).then(res => {\n    setAuthorizationHeader(tokenId);\n    dispatch({\n      type: SET_USER,\n      payload: res.data\n    });\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    history.push('/');\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const signupUser = (newUserData, history, tokenId) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/signup', newUserData).then(res => {\n    setAuthorizationHeader(tokenId);\n    dispatch({\n      type: SET_USER,\n      payload: res.data\n    });\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    history.push('/');\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const getUserDetails = userData => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/signup', userData).then(res => {\n    dispatch({\n      type: SET_USER,\n      payload: res.data\n    });\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem('tokenId');\n  delete axios.defaults.headers.common['Authorization'];\n  dispatch({\n    type: SET_UNAUTHENTICATED\n  });\n};\n\nconst setAuthorizationHeader = token => {\n  const tokenId = `Bearer ${token}`;\n  localStorage.setItem('tokenId', tokenId);\n  axios.defaults.headers.common['Authorization'] = tokenId;\n};","map":{"version":3,"sources":["/home/fr/projects/web-srs/web-srs-client/src/redux/actions/userActions.js"],"names":["SET_USER","SET_ERRORS","CLEAR_ERRORS","LOADING_UI","SET_UNAUTHENTICATED","axios","loginUser","userData","history","tokenId","dispatch","type","post","then","res","setAuthorizationHeader","payload","data","push","catch","err","response","signupUser","newUserData","getUserDetails","logoutUser","localStorage","removeItem","defaults","headers","common","token","setItem"],"mappings":"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","sourcesContent":["import {\n  SET_USER,\n  SET_ERRORS,\n  CLEAR_ERRORS,\n  LOADING_UI,\n  SET_UNAUTHENTICATED\n} from '../types';\nimport axios from 'axios';\n\nexport const loginUser = (userData, history, tokenId) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post('/signup', userData)\n    .then((res) => {\n      setAuthorizationHeader(tokenId);\n      dispatch({\n        type: SET_USER,\n        payload: res.data\n      });\n      dispatch({ type: CLEAR_ERRORS });\n      history.push('/');\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n\nexport const signupUser = (newUserData, history, tokenId) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post('/signup', newUserData)\n    .then((res) => {\n      setAuthorizationHeader(tokenId);\n      dispatch({\n        type: SET_USER,\n        payload: res.data\n      });\n      dispatch({ type: CLEAR_ERRORS });\n      history.push('/');\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n\nexport const getUserDetails = (userData) => (dispatch) => {\n\n  dispatch({ type: LOADING_UI });\n  axios\n    .post('/signup', userData)\n    .then((res) => {\n      dispatch({\n        type: SET_USER,\n        payload: res.data\n      });\n      dispatch({ type: CLEAR_ERRORS });\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    });\n}\n\nexport const logoutUser = () => (dispatch) => {\n  localStorage.removeItem('tokenId');\n\n  delete axios.defaults.headers.common['Authorization'];\n  dispatch({ type: SET_UNAUTHENTICATED });\n\n};\n\nconst setAuthorizationHeader = (token) => {\n  const tokenId = `Bearer ${token}`;\n  localStorage.setItem('tokenId', tokenId);\n  axios.defaults.headers.common['Authorization'] = tokenId;\n};\n"]},"metadata":{},"sourceType":"module"}