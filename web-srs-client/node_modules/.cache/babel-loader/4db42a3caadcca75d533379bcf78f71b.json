{"ast":null,"code":"var _jsxFileName = \"/home/fr/projects/web-srs/web-srs-client/src/pages/addCard.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FrontFlashCard from '../components/FrontFlashCard';\nimport Module from '../components/Module'; // MATERIAL UI\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button'; // REDUX\n\nimport { connect } from 'react-redux'; // import store from './../redux/store';\n// import { SET_ERRORS } from './../redux/types';\n\nimport axios from 'axios';\nconst styles = {\n  typography: {\n    useNextVariants: true\n  },\n  form: {\n    textAlign: 'center'\n  },\n  image: {\n    margin: '20px auto 20px auto'\n  },\n  pageTitle: {\n    margin: '100px auto 10px auto'\n  },\n  pageTitle2: {\n    margin: '30px auto 10px auto'\n  },\n  textField: {\n    margin: '10px auto 10px auto'\n  },\n  button: {\n    marginTop: 20,\n    position: 'relative'\n  }\n};\n\nclass addCard extends Component {\n  constructor() {\n    super();\n\n    this.getModules = () => {\n      const userId = this.props.userId;\n      console.log(\"MuserId \", userId);\n      axios.get(`/module/user/${userId}`).then(res => {\n        this.setState({\n          modules: res.data\n        });\n      }).catch(err => {\n        console.log(\"Module Error\", err);\n      });\n    };\n\n    this.getCards = () => {\n      const userId = this.props.userId;\n      console.log(\"CuserId \", userId);\n      axios.get(`/card/user/${userId}`).then(res => {\n        this.setState({\n          cards: res.data\n        });\n        console.log(\"state: \", this.state);\n      }).catch(err => {\n        console.log(\"Cards Error\", err);\n      });\n    };\n\n    this.handleCardSubmit = () => {\n      const {\n        front,\n        back,\n        userId\n      } = this.state;\n      axios.post(\"/card\", {\n        front,\n        back,\n        userId\n      }).then(res => {\n        console.log(\"Card Added\", res.data);\n        this.setState({\n          front: \"\",\n          back: \"\"\n        });\n        this.getCards();\n      }).catch(err => {\n        console.log(\"Card Error\", err);\n      });\n    };\n\n    this.handleModuleSubmit = () => {\n      console.log(\"state: \", this.state);\n      const {\n        topic,\n        userId\n      } = this.state;\n      const cardIds = this.props.selectedCards;\n      axios.post(\"/module\", {\n        topic,\n        userId,\n        cardIds\n      }).then(res => {\n        console.log(\"Module Added\", res.data);\n        this.setState({\n          topic: \"\",\n          cardIds: []\n        });\n        this.getModules();\n      }).catch(err => {\n        console.log(\"Card Error\", err);\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSelectedModule = event => {\n      this.setState({\n        moduleSelected: true,\n        moduleIndex: event.target.key\n      });\n      console.log(\"State \", this.state);\n    };\n\n    this.handleSelectedCard = event => {\n      console.log(\"selectedCards  ==> \", this.props.selectedCards);\n    };\n\n    this.state = {\n      front: \"\",\n      back: \"\",\n      cardIds: [],\n      topic: \"\",\n      userId: \"\",\n      modules: [],\n      cards: []\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.authenticated || !this.props.userId) {\n      this.props.history.push(\"/login\");\n    }\n\n    this.setState({\n      userId: this.props.userId\n    });\n    this.getModules();\n    this.getCards();\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: classes.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: true,\n      className: \"sm-grid-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h2\",\n      className: classes.pageTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, \"MyModules\"), this.state.modules.map((module, i) => /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      onClick: this.handleSelectedModule,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Module, {\n      module: module,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: true,\n      className: \"sm-grid-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h2\",\n      className: classes.pageTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }, \"MyFlashCards\"), this.state.cards.map((card, i) => /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.handleSelectedCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FrontFlashCard, {\n      card: card,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: true,\n      className: \"sm-grid-md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h2\",\n      className: classes.pageTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }\n    }, \"FlashCard\"), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"front\",\n      name: \"front\",\n      type: \"text\",\n      label: \"Question\",\n      className: classes.textField,\n      value: this.state.front,\n      onChange: this.handleChange,\n      multiline: true,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"back\",\n      name: \"back\",\n      type: \"text\",\n      label: \"Answer\",\n      className: classes.textField,\n      value: this.state.back,\n      onChange: this.handleChange,\n      multiline: true,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      onClick: this.handleCardSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }, \"Create New Card\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      onClick: this.handleModuleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }\n    }, \"Add Module With Selected Flushcards\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      className: classes.button,\n      onClick: this.handleDeleteModule,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }\n    }, \"Delete Selected Modules\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\naddCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n  data: PropTypes.object,\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  authenticated: state.user.authenticated,\n  userId: state.user.id,\n  selectedCards: state.data.selectedCards\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(addCard));","map":{"version":3,"sources":["/home/fr/projects/web-srs/web-srs-client/src/pages/addCard.js"],"names":["React","Component","PropTypes","FrontFlashCard","Module","withStyles","Grid","Typography","Card","TextField","Button","connect","axios","styles","typography","useNextVariants","form","textAlign","image","margin","pageTitle","pageTitle2","textField","button","marginTop","position","addCard","constructor","getModules","userId","props","console","log","get","then","res","setState","modules","data","catch","err","getCards","cards","state","handleCardSubmit","front","back","post","handleModuleSubmit","topic","cardIds","selectedCards","handleChange","event","target","name","value","handleSelectedModule","moduleSelected","moduleIndex","key","handleSelectedCard","componentDidMount","authenticated","history","push","render","classes","map","module","i","card","handleDeleteModule","propTypes","object","isRequired","user","mapStateToProps","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FrontFlashCard from '../components/FrontFlashCard';\nimport Module from '../components/Module';\n\n// MATERIAL UI\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n// REDUX\n\nimport { connect } from 'react-redux';\n// import store from './../redux/store';\n// import { SET_ERRORS } from './../redux/types';\n\nimport axios from 'axios';\n\n\nconst styles = {\n  typography: {\n    useNextVariants: true\n  },\n  form: {\n    textAlign: 'center'\n  },\n  image: {\n    margin: '20px auto 20px auto'\n  },\n  pageTitle: {\n    margin: '100px auto 10px auto'\n  },\n  pageTitle2: {\n    margin: '30px auto 10px auto'\n  },\n  textField: {\n    margin: '10px auto 10px auto'\n  },\n  button: {\n    marginTop: 20,\n    position: 'relative'\n  },\n}\n\nclass addCard extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n\n      front: \"\",\n      back: \"\",\n      cardIds: [],\n      topic: \"\",\n      userId: \"\",\n      modules: [],\n      cards: []\n\n    }\n    \n  };\n\n  componentDidMount(){\n    if(!this.props.authenticated || !this.props.userId){\n      this.props.history.push(\"/login\");\n    }\n    this.setState({\n      \n      userId: this.props.userId\n    })\n    this.getModules();\n    this.getCards();\n  }\n\n  getModules = () => {\n    const userId  = this.props.userId;\n    console.log(\"MuserId \", userId);\n    axios.get(`/module/user/${userId}`)\n      .then(res => {\n        this.setState({\n          modules: res.data\n        })\n      }).catch((err) => {\n        console.log(\"Module Error\", err);\n      })\n  }\n\n  getCards = () => {\n    const userId  = this.props.userId;\n    console.log(\"CuserId \", userId);\n\n    axios.get(`/card/user/${userId}`)\n      .then(res => {\n        this.setState({\n          cards: res.data\n        })\n        console.log(\"state: \", this.state);\n      }).catch((err) => {\n        console.log(\"Cards Error\", err);\n      })\n  }\n  \n  handleCardSubmit = () => {\n    const {front, back, userId} = this.state;\n\n    axios.post(\"/card\", {front, back, userId})\n      .then(res => {\n        console.log(\"Card Added\", res.data);\n        this.setState({\n          front: \"\",\n          back: \"\"\n        })\n        this.getCards();\n      }).catch((err) => {\n        console.log(\"Card Error\", err);\n      })\n\n  }\n\n  handleModuleSubmit = () => {\n    console.log(\"state: \", this.state);\n    const {topic, userId} = this.state;\n    const cardIds = this.props.selectedCards;\n    axios.post(\"/module\", {topic, userId, cardIds})\n      .then(res => {\n        console.log(\"Module Added\", res.data);\n        this.setState({\n          topic: \"\",\n          cardIds: []\n        })\n        this.getModules();\n      }).catch((err) => {\n        console.log(\"Card Error\", err);\n      })\n\n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value \n    })\n  }\n\n  handleSelectedModule = (event) => {\n    this.setState({\n      moduleSelected: true,\n      moduleIndex: event.target.key\n    })   \n    console.log(\"State \", this.state);\n  }\n  handleSelectedCard = (event) => {\n    console.log(\"selectedCards  ==> \", this.props.selectedCards);\n  }\n\n    render() {\n        const {classes} = this.props;\n       return (\n                         \n        <Grid container className={classes.form}>\n          <Grid item sm className=\"sm-grid-right\">\n          <Typography variant=\"h2\" className={classes.pageTitle}>\n            \n            MyModules\n          </Typography>\n            {this.state.modules.map((module, i) => (\n              <div key={i} onClick={this.handleSelectedModule}>\n                <Module module={module} /> \n              </div>\n              )  \n            )}\n        </Grid>\n        <Grid item sm className=\"sm-grid-left\">\n          <Typography variant=\"h2\" className={classes.pageTitle}>\n            MyFlashCards\n          </Typography>\n          {this.state.cards.map((card, i) => (\n              <div onClick={this.handleSelectedCard} >\n                <FrontFlashCard card={card} key={i}/> \n              </div>\n            )  \n          )}\n        </Grid>\n        <Grid item sm className=\"sm-grid-md\">\n      \n          <Typography variant=\"h2\" className={classes.pageTitle}>\n            FlashCard\n          </Typography>\n          <form noValidate>\n            <TextField\n              id=\"front\"\n              name=\"front\"\n              type=\"text\"\n              label=\"Question\"\n              className={classes.textField}\n              value={this.state.front}\n              onChange={this.handleChange}\n              multiline={true}\n              fullWidth\n            />\n            <TextField\n              id=\"back\"\n              name=\"back\"\n              type=\"text\"\n              label=\"Answer\"\n              className={classes.textField}\n              value={this.state.back}\n              onChange={this.handleChange}\n              multiline={true}\n              fullWidth\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              onClick={this.handleCardSubmit}\n            >\n              Create New Card\n            </Button>\n\n            <br />\n          </form>\n\n          {/* <Typography variant=\"h2\">\n            \n            Module\n          </Typography> */}\n          <form noValidate>\n            {/* <TextField\n              id=\"topic\"\n              name=\"topic\"\n              type=\"text\"\n              label=\"Optional Topic\"\n              className={classes.textField}\n              value={this.state.topic}\n              onChange={this.handleChange}\n              multiline={true}\n              fullWidth\n            /> */}\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              onClick={this.handleModuleSubmit}\n            >\n              Add Module With Selected Flushcards\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.button}\n              onClick={this.handleDeleteModule}\n            >\n              Delete Selected Modules\n            </Button>\n\n            <br />\n          </form>\n\n\n        </Grid>\n\n      </Grid>\n          \n        );\n    }\n}\n\naddCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n  data: PropTypes.object,\n  user: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  authenticated: state.user.authenticated,\n  userId: state.user.id,\n  selectedCards: state.data.selectedCards\n});\n\n\nexport default connect(mapStateToProps)(withStyles(styles)(addCard));\n\n"]},"metadata":{},"sourceType":"module"}